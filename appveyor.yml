# For appveyor.yml example : https://www.appveyor.com/docs/appveyor-yml/
# For appveyor.yml validation: https://ci.appveyor.com/tools/validate-yaml

version: 1.0.{build}
clone_depth: 50                      # clone entire repository history if not defined
# Start builds on tags only (GitHub and BitBucket)
#skip_non_tags: true
# Skipping commits with particular message or from specific user
skip_commits:
  message: /noci/      # Regex for matching commit message
# scripts that are called at very beginning, before repo cloning
init:
  - git config --global core.autocrlf input

# branches to build
branches:
  only:
    - appveyor-ci

# this is how to allow failing jobs in the matrix
matrix:
  fast_finish: true     # set this flag to immediately finish build once one of the jobs fails.
  allow_failures:
    - platform: x64

# scripts to run before build
install:
  - ps: Write-Host 'This is PowerShell'
  - cmd: echo This is batch again
  - python3 -m pip install -r requirements.txt
  - ps: GIT_VERSION=git describe --abrev=0 --tags

  - pyinstaller -y pyinstaller.spec
  # /D specifies additional variables to be used in the script
  - makensis /DPRODUCT_VERSION=GIT_VERSION .\pkg\windows_nsis_installer.nsh

# TESTS (add these at some point)
before_test:
test:
after_test:

notifications:
  - provider: Email
    to:
      - projectmerlink@gmail.com
    subject: 'Build {{status}}'                  # optional
    message: "{{message}}, {{commitId}}, ..."    # optional

deploy:
  release: merlink-v$(appveyor_build_version)
  description: 'Release description'
  provider: GitHub
  auth_token:
    secure: <your encrypted token> # your encrypted token from GitHub
  # artifact: /.*\.nupkg/            # upload all NuGet packages to release assets
  draft: false
  prerelease: true
  on:
    branch: appveyor-ci                 # release from master branch only
    #appveyor_repo_tag: true        # deploy on tag push only